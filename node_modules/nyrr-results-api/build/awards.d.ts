import { z } from "zod";
export declare const teamAwardsSchema: z.ZodObject<{
    awardId: z.ZodNumber;
    teamGroupOrder: z.ZodNumber;
    teamOrder: z.ZodNumber;
    teamCode: z.ZodString;
    teamName: z.ZodString;
    teamGender: z.ZodString;
    minimumAge: z.ZodNumber;
    summaryPlace: z.ZodNumber;
    summaryTime: z.ZodNumber;
    runnersCount: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    awardId: number;
    teamGroupOrder: number;
    teamOrder: number;
    teamCode: string;
    teamName: string;
    teamGender: string;
    minimumAge: number;
    summaryPlace: number;
    summaryTime: number;
    runnersCount: number;
}, {
    awardId: number;
    teamGroupOrder: number;
    teamOrder: number;
    teamCode: string;
    teamName: string;
    teamGender: string;
    minimumAge: number;
    summaryPlace: number;
    summaryTime: number;
    runnersCount: number;
}>;
export declare type TeamAwards = z.infer<typeof teamAwardsSchema>;
export declare type getTeamAwards = Promise<TeamAwards[]>;
export declare const getTeamAwards: (eventCode: string, teamCode: string, gender?: string | null, minimumAge?: number | null) => getTeamAwards;
export declare const teamAwardRunnersSchema: z.ZodObject<{
    runnerId: z.ZodNumber;
    firstName: z.ZodString;
    lastName: z.ZodString;
    bib: z.ZodString;
    gender: z.ZodString;
    age: z.ZodNumber;
    city: z.ZodString;
    stateProvince: z.ZodString;
    country: z.ZodString;
    iaaf: z.ZodString;
    finishTime: z.ZodNumber;
    finishPlace: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    runnerId: number;
    firstName: string;
    lastName: string;
    bib: string;
    gender: string;
    age: number;
    city: string;
    stateProvince: string;
    country: string;
    iaaf: string;
    finishTime: number;
    finishPlace: number;
}, {
    runnerId: number;
    firstName: string;
    lastName: string;
    bib: string;
    gender: string;
    age: number;
    city: string;
    stateProvince: string;
    country: string;
    iaaf: string;
    finishTime: number;
    finishPlace: number;
}>;
export declare type TeamAwardRunners = z.infer<typeof teamAwardRunnersSchema>;
export declare type getTeamAwardRunners = Promise<TeamAwardRunners[]>;
export declare const getTeamAwardRunners: (eventCode: string, teamCode: string, teamGender?: string | null, teamMinimumAge?: number | null) => getTeamAwardRunners;
